Index: .idea/shelf/Uncommitted_changes_before_Update_at_2021_9_28_0_28_[Changes]/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_2021_9_28_0_28_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_2021_9_28_0_28_[Changes]/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_2021_9_28_0_28_[Changes]/shelved.patch	(revision fdb4db5450e79068b0e4a17986902a90f73c05f7)
+++ /dev/null	(revision fdb4db5450e79068b0e4a17986902a90f73c05f7)
@@ -1,117 +0,0 @@
-Index: hw2.py
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/hw2.py b/hw2.py
-new file mode 100644
---- /dev/null	(date 1632803278028)
-+++ b/hw2.py	(date 1632803278028)
-@@ -0,0 +1,43 @@
-+# File name: hw2.py
-+# Created by: Yuxiao Wu
-+# Created on : 9/28/2021
-+# no collaborators, no late days
-+# source: textbook
-+
-+# Problem 5
-+# Take a float input grade and returns the letter string
-+def calculate_letter(score):
-+    if score >= 93:
-+        letter = "A"
-+    if 93 > score >= 90:
-+        letter = "A-"
-+    if 90 > score >= 87:
-+        letter = "B+"
-+    if 87 > score >= 83:
-+        letter = "B"
-+    if 83 > score >= 80:
-+        letter = "B-"
-+    if 80 > score >= 77:
-+        letter = "C+"
-+    if 77 > score >= 73:
-+        letter = "C"
-+    if 73 > score >= 70:
-+        letter = "C-"
-+    if 70 > score >= 50:
-+        letter = "D+"
-+    else:
-+        letter = "F"
-+    return letter
-+
-+
-+# Problem 6
-+# take an input year and check if it is a leap year by returning True or False
-+def is_leap(year):
-+    if year // 4 == 0 and year // 100 != 0 or year // 400 == 0:
-+        return True
-+    else:
-+        return False
-+
-+
-+print(is_leap(1000))
-+a = is_leap(1000)
-Index: hw1.py
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+># File name: hw1.py\r\n# Created by: Yuxiao Wu\r\n# Created on : 9/15/2021\r\n# no collaborators, no late days\r\n# source for formula: https://sciencenotes.org/surface-area-formulas-volume-formulas/\r\n\r\n\r\n# Problem 6\r\n# save the words in the sentence \"Hi my name is Bob\" into variables and print.\r\ndef write_sentence():\r\n    sentence = \"Hi my name is Bob\"\r\n    print(sentence)\r\n\r\n\r\n# Problem 7\r\n# take in two integers a and b and calculate the bitwise or result.\r\ndef bit_or(a, b):\r\n    result = a | b\r\n    format(result, \"b\")\r\n    return result\r\n\r\n\r\n# Problem 8\r\n# input the number of hours since Wed, Jan 1st 2020 at 12am, return a string result\r\ndef calculate_day(num_hours):\r\n    num_day = num_hours // 24  # number of days elapsed\r\n    hour = num_hours % 24  # hours in the day\r\n    day = num_day % 7  # days in the week\r\n    if day == 0:\r\n        day_str = \"Wednesday \"\r\n    elif day == 1:\r\n        day_str = \"Thursday \"\r\n    elif day == 2:\r\n        day_str = \"Friday \"\r\n    elif day == 3:\r\n        day_str = \"Saturday \"\r\n    elif day == 4:\r\n        day_str = \"Sunday \"\r\n    elif day == 5:\r\n        day_str = \"Monday \"\r\n    else:\r\n        day_str = \"Tuesday \"\r\n\r\n    if hour < 12:\r\n        hour_str = \"at \" + str(hour) + \" AM\"\r\n    else:\r\n        hour_str = \"at \" + str(hour - 12) + \" PM\"\r\n    daytime = day_str + hour_str\r\n    return daytime\r\n\r\n\r\n# Problem 9\r\n# calculates the volume of sphere or cone with input radius and height\r\ndef calculate_volume(shape, dimensions):\r\n    if shape == \"sphere\":\r\n        volume = round(4 / 3 * 3.14 * dimensions ** 3, 2)\r\n        return volume\r\n    elif shape == \"cone\":\r\n        volume = round(1 / 3 * 3.14 * dimensions[1] * dimensions[0] ** 2, 2)\r\n        return volume\r\n    return \"Invalid Shape\"\r\n\r\n\r\n\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/hw1.py b/hw1.py
---- a/hw1.py	(revision 60aa1dd7b2f8b7b6514abcaa78a65aeb038983d6)
-+++ b/hw1.py	(date 1632360808540)
-@@ -2,14 +2,18 @@
- # Created by: Yuxiao Wu
- # Created on : 9/15/2021
- # no collaborators, no late days
--# source for formula: https://sciencenotes.org/surface-area-formulas-volume-formulas/
-+# source: https://sciencenotes.org/surface-area-formulas-volume-formulas/ for formula and textbook
- 
- 
- # Problem 6
- # save the words in the sentence "Hi my name is Bob" into variables and print.
- def write_sentence():
--    sentence = "Hi my name is Bob"
--    print(sentence)
-+    word_1 = "Hi "
-+    word_2 = "my "
-+    word_3 = "name "
-+    word_4 = "is "
-+    word_5 = "Bob"
-+    print(word_1 + word_2 + word_3 + word_4 + word_5)
- 
- 
- # Problem 7
-@@ -26,6 +30,7 @@
-     num_day = num_hours // 24  # number of days elapsed
-     hour = num_hours % 24  # hours in the day
-     day = num_day % 7  # days in the week
-+    # Find the day
-     if day == 0:
-         day_str = "Wednesday "
-     elif day == 1:
-@@ -40,7 +45,7 @@
-         day_str = "Monday "
-     else:
-         day_str = "Tuesday "
--
-+    # Find the hour
-     if hour < 12:
-         hour_str = "at " + str(hour) + " AM"
-     else:
-@@ -53,7 +58,7 @@
- # calculates the volume of sphere or cone with input radius and height
- def calculate_volume(shape, dimensions):
-     if shape == "sphere":
--        volume = round(4 / 3 * 3.14 * dimensions ** 3, 2)
-+        volume = round(4 / 3 * 3.14 * dimensions[0] ** 3, 2)
-         return volume
-     elif shape == "cone":
-         volume = round(1 / 3 * 3.14 * dimensions[1] * dimensions[0] ** 2, 2)
-@@ -62,3 +67,5 @@
- 
- 
- 
-+
-+
Index: .idea/shelf/Uncommitted_changes_before_Update_at_2021_9_28_0_28__Changes_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_2021_9_28_0_28__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_2021_9_28_0_28__Changes_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_2021_9_28_0_28__Changes_.xml	(revision fdb4db5450e79068b0e4a17986902a90f73c05f7)
+++ /dev/null	(revision fdb4db5450e79068b0e4a17986902a90f73c05f7)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_2021_9_28_0_28_[Changes]" date="1632803329406" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_2021_9_28_0_28_[Changes]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 2021/9/28 0:28 [Changes]" />
-</changelist>
\ No newline at end of file
Index: tic-tac-toe.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># File name: tic-tac-toe.py\r\n# Created by: Yuxiao Wu\r\n# Created on : 10/2/2021\r\n# no collaborators, no late days\r\n# source: textbook\r\n\"\"\"\r\nTic Tac Toe Simulation Starter Code\r\n\"\"\"\r\nimport random\r\n\r\n\r\nclass TicTacToeSim:\r\n\r\n    # Part 1\r\n    def __init__(self):\r\n        # Initialize the simulation\r\n        self.board = [[0, 0, 0],\r\n                      [0, 0, 0],\r\n                      [0, 0, 0]]\r\n        self.AI = False\r\n        self.turn = 1\r\n        self.AITurn = 1\r\n\r\n    # Set up board as a 2D list, turn to player 1, and ai to false\r\n\r\n    def change_turn(self):\r\n        # Change turn to other player\r\n        if self.turn == 1:\r\n            self.turn = 2\r\n        else:\r\n            self.turn = 1\r\n        return\r\n\r\n    def play_game(self):\r\n        # This is the driver method for the simulation\r\n        while 1:\r\n            self.print_board()\r\n            self.take_turn(1)\r\n            self.change_turn()\r\n        return\r\n\r\n    # Part 2\r\n    def print_board(self):\r\n        # Print the state of the board using X (player 1) and O (player 2)\r\n        for each_row in self.board:\r\n            print(\"[\", end=\"\")\r\n            # Convert the board into readable version\r\n            for each_move in each_row[0:2]:\r\n                if each_move == 0:\r\n                    print(\"' ',\", end=\"\")\r\n                elif each_move == 1:\r\n                    print(\"'X',\", end=\"\")\r\n                else:\r\n                    print(\"'O',\", end=\"\")\r\n            if each_row[2] == 0:\r\n                print(\"' '\", end=\"\")\r\n            elif each_row[2] == 1:\r\n                print(\"'X'\", end=\"\")\r\n            else:\r\n                print(\"'O'\", end=\"\")\r\n            print(\"]\")\r\n        return\r\n\r\n    # Part 3\r\n    def get_move(self):\r\n        # Get input from user asking for their move as a tuple\r\n        print(\"What move would you like to make?\")\r\n        row = int(input(\"Row: \"))\r\n        col = int(input(\"Col: \"))\r\n        return row, col\r\n\r\n    # Part 4\r\n    def take_turn(self, player):\r\n        # This is the driver method for a players turn\r\n        row, col = self.get_move()\r\n        while self.board[row][col] != 0:\r\n            print(\"This move is invalid!\")\r\n            row, col = self.get_move()\r\n        self.make_move((row, col), player)\r\n        return\r\n\r\n    def get_available_squares(self):\r\n        # Get a list of available squares as tuples (row,col)\r\n        for row_item in self.board:\r\n            for col_item in row_item:\r\n                if col_item == 0:\r\n                    available_squares.append(row_item, col_item)\r\n\r\n        return available_squares\r\n\r\n    def make_move(self, move, player):\r\n        # Update the board\r\n        self.board[move[0]][move[1]] = player\r\n        return\r\n\r\n    # Part 5\r\n    def check_winner(self):\r\n        # Check if a player has won, there are 8 ways to win.\r\n        # Return the player who won 0 if nobody has won, and -1 if it is a draw\r\n        result = 0\r\n        # check for the same row\r\n        for row in seq:\r\n            if row[0] == row[1] == row[2] == 1:\r\n                result = 1\r\n            if row[0] == row[1] == row[2] == 2:\r\n                result = 2\r\n        # check for the same column\r\n        for i in range(3):\r\n            if seq[0][i] == seq[1][i] == seq[2][i] == 1:\r\n                result = 1\r\n            if seq[0][i] == seq[1][i] == seq[2][i] == 2:\r\n                result = 2\r\n        # check for the diagonal\r\n        if seq[0][0] == seq[1][1] == seq[2][2] == 1:\r\n            result = 1\r\n        if seq[0][0] == seq[1][1] == seq[2][2] == 2:\r\n            result = 2\r\n        if seq[0][2] == seq[1][1] == seq[2][0] == 1:\r\n            result = 1\r\n        if seq[0][2] == seq[1][1] == seq[2][0] == 2:\r\n            result = 2\r\n\r\n        return result\r\n\r\n    # Part 6\r\n    def random_move(self):\r\n        # Choose a random move from available moves\r\n        return None\r\n\r\n    # Part 7\r\n    def winning_move(self, player):\r\n        # Find a winning move for a player\r\n        return None\r\n\r\n    def threat_to_lose(self):\r\n        # Run winning_move from other perspective\r\n        return\r\n\r\n    def smart_move(self):\r\n        # If there is a winning move, win\r\n        # If there is a threat to lose, block\r\n        # Make random move\r\n        return\r\n\r\n\r\nsim = TicTacToeSim()\r\nsim.play_game()
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/tic-tac-toe.py b/tic-tac-toe.py
--- a/tic-tac-toe.py	(revision fdb4db5450e79068b0e4a17986902a90f73c05f7)
+++ b/tic-tac-toe.py	(date 1633566926542)
@@ -2,7 +2,7 @@
 # Created by: Yuxiao Wu
 # Created on : 10/2/2021
 # no collaborators, no late days
-# source: textbook
+# source: textbook, wiki
 """
 Tic Tac Toe Simulation Starter Code
 """
@@ -33,10 +33,42 @@
 
     def play_game(self):
         # This is the driver method for the simulation
-        while 1:
-            self.print_board()
-            self.take_turn(1)
-            self.change_turn()
+        self.AI = eval(input("Would you like to play against an AI? True/False: "))
+        self.turn = int(input("Would you like to be player 1 or 2? 1/2: "))
+        print("Player", self.turn, "goes first.")
+        # Play with AI
+        if self.AI:
+            while sim.check_winner() == 0:
+                # Player move
+                self.take_turn(self.turn)
+                self.print_board()
+                self.change_turn()
+                if sim.check_winner() != 0:
+                    break
+                # AI move
+                print("It is Player", self.turn, "'s turn.")
+                if self.winning_move(self.turn):
+                    self.make_move(self.winning_move(self.turn), self.turn)
+                elif self.threat_to_lose():
+                    self.make_move(self.threat_to_lose(), self.turn)
+                else:
+                    self.make_move(self.random_move(), self.turn)
+                self.print_board()
+                self.change_turn()
+        # Play without AI
+        else:
+            # Keep checking if someone has won
+            while sim.check_winner() == 0:
+                self.take_turn(self.turn)
+                self.print_board()
+                self.change_turn()
+        # Print the player who won or draw
+        if sim.check_winner() == -1:
+            print("It is a draw!")
+        elif sim.check_winner() == 1:
+            print("Player 1 wins!")
+        elif sim.check_winner() == 2:
+            print("Player 2 wins!")
         return
 
     # Part 2
@@ -45,10 +77,10 @@
         for each_row in self.board:
             print("[", end="")
             # Convert the board into readable version
-            for each_move in each_row[0:2]:
-                if each_move == 0:
+            for each_ele in each_row[0:2]:
+                if each_ele == 0:
                     print("' ',", end="")
-                elif each_move == 1:
+                elif each_ele == 1:
                     print("'X',", end="")
                 else:
                     print("'O',", end="")
@@ -72,8 +104,9 @@
     # Part 4
     def take_turn(self, player):
         # This is the driver method for a players turn
+        print("It is Player", player, "'s turn.")
         row, col = self.get_move()
-        while self.board[row][col] != 0:
+        while row >= 2 or col >= 2 or self.board[row][col] != 0:
             print("This move is invalid!")
             row, col = self.get_move()
         self.make_move((row, col), player)
@@ -81,10 +114,11 @@
 
     def get_available_squares(self):
         # Get a list of available squares as tuples (row,col)
-        for row_item in self.board:
-            for col_item in row_item:
-                if col_item == 0:
-                    available_squares.append(row_item, col_item)
+        available_squares = []
+        for row in range(3):
+            for col in range(3):
+                if self.board[row][col] == 0:
+                    available_squares.append((row, col))
 
         return available_squares
 
@@ -97,27 +131,32 @@
     def check_winner(self):
         # Check if a player has won, there are 8 ways to win.
         # Return the player who won 0 if nobody has won, and -1 if it is a draw
-        result = 0
+        result = -1
+        # check for draw
+        for row in self.board:
+            for ele in row:
+                if ele == 0:
+                    result = 0
         # check for the same row
-        for row in seq:
+        for row in self.board:
             if row[0] == row[1] == row[2] == 1:
                 result = 1
             if row[0] == row[1] == row[2] == 2:
                 result = 2
         # check for the same column
         for i in range(3):
-            if seq[0][i] == seq[1][i] == seq[2][i] == 1:
+            if self.board[0][i] == self.board[1][i] == self.board[2][i] == 1:
                 result = 1
-            if seq[0][i] == seq[1][i] == seq[2][i] == 2:
+            if self.board[0][i] == self.board[1][i] == self.board[2][i] == 2:
                 result = 2
         # check for the diagonal
-        if seq[0][0] == seq[1][1] == seq[2][2] == 1:
+        if self.board[0][0] == self.board[1][1] == self.board[2][2] == 1:
             result = 1
-        if seq[0][0] == seq[1][1] == seq[2][2] == 2:
+        if self.board[0][0] == self.board[1][1] == self.board[2][2] == 2:
             result = 2
-        if seq[0][2] == seq[1][1] == seq[2][0] == 1:
+        if self.board[0][2] == self.board[1][1] == self.board[2][0] == 1:
             result = 1
-        if seq[0][2] == seq[1][1] == seq[2][0] == 2:
+        if self.board[0][2] == self.board[1][1] == self.board[2][0] == 2:
             result = 2
 
         return result
@@ -125,16 +164,49 @@
     # Part 6
     def random_move(self):
         # Choose a random move from available moves
-        return None
+        move = random.choice(self.get_available_squares())
+        return move
 
     # Part 7
     def winning_move(self, player):
         # Find a winning move for a player
-        return None
+        move = False
+        for i in range(len(self.board)):
+            # check for horizontal
+            if self.board[i][0] == self.board[i][1] == player and self.board[i][2] == 0:
+                move = (i, 2)
+            if self.board[i][0] == self.board[i][2] == player and self.board[i][1] == 0:
+                move = (i, 1)
+            if self.board[i][1] == self.board[i][2] == player and self.board[i][0] == 0:
+                move = (i, 0)
+            # check for vertical
+            if self.board[0][i] == self.board[1][i] == player and self.board[2][i] == 0:
+                move = (2, i)
+            if self.board[0][i] == self.board[2][i] == player and self.board[1][i] == 0:
+                move = (1, i)
+            if self.board[1][i] == self.board[2][i] == player and self.board[2][i] == 0:
+                move = (0, i)
+        # check for diagonal
+        if (self.board[0][0] == self.board[2][2] == player or self.board[0][2] == self.board[2][0] == player) and self.board[1][1] == 0:
+            move = (1, 1)
+        if self.board[0][0] == self.board[1][1] == player and self.board[2][2] == 0:
+            move = (2, 2)
+        if self.board[2][2] == self.board[1][1] == player and self.board[0][0] == 0:
+            move = (0, 0)
+        if self.board[0][2] == self.board[1][1] == player and self.board[2][0] == 0:
+            move = (2, 0)
+        if self.board[1][1] == self.board[2][0] == player and self.board[0][2] == 0:
+            move = (0, 2)
+        return move
 
     def threat_to_lose(self):
         # Run winning_move from other perspective
-        return
+        move = False
+        if self.turn == 1:
+            move = self.winning_move(2)
+        elif self.turn == 2:
+            move = self.winning_move(1)
+        return move
 
     def smart_move(self):
         # If there is a winning move, win
@@ -144,4 +216,5 @@
 
 
 sim = TicTacToeSim()
-sim.play_game()
\ No newline at end of file
+sim.play_game()
+
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"018372b0-5d07-4d50-84d5-5c15266a4586\" name=\"Changes\" comment=\"\">\r\n      <change afterPath=\"$PROJECT_DIR$/lab2.py\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Python Script\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitSEFilterConfiguration\">\r\n    <file-type-list>\r\n      <filtered-out-file-type name=\"LOCAL_BRANCH\" />\r\n      <filtered-out-file-type name=\"REMOTE_BRANCH\" />\r\n      <filtered-out-file-type name=\"TAG\" />\r\n      <filtered-out-file-type name=\"COMMIT_BY_MESSAGE\" />\r\n    </file-type-list>\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"1yHXR52q66ZlYHFZtq7P2Hn8Fc3\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">\r\n    <property name=\"ASKED_SHARE_PROJECT_CONFIGURATION_FILES\" value=\"true\" />\r\n    <property name=\"RunOnceActivity.OpenProjectViewOnStart\" value=\"true\" />\r\n    <property name=\"RunOnceActivity.ShowReadmeOnStart\" value=\"true\" />\r\n    <property name=\"WebServerToolWindowFactoryState\" value=\"false\" />\r\n    <property name=\"last_opened_file_path\" value=\"$PROJECT_DIR$/tic-tac-toe.py\" />\r\n  </component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\74545\\Desktop\\GitHub\\CS521\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"tic-tac-toe\" type=\"PythonConfigurationType\" factoryName=\"Python\" nameIsGenerated=\"true\">\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"C:\\Users\\74545\\PycharmProjects\\pythonProject\\venv\\Scripts\\python.exe\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <module name=\"\" />\r\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/tic-tac-toe.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"018372b0-5d07-4d50-84d5-5c15266a4586\" name=\"Changes\" comment=\"\" />\r\n      <created>1631909476435</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1631909476435</updated>\r\n      <workItem from=\"1631909479383\" duration=\"12778000\" />\r\n      <workItem from=\"1632802455971\" duration=\"6270000\" />\r\n      <workItem from=\"1632857481874\" duration=\"803000\" />\r\n      <workItem from=\"1633196170910\" duration=\"106000\" />\r\n      <workItem from=\"1633196551177\" duration=\"1801000\" />\r\n      <workItem from=\"1633216736167\" duration=\"13344000\" />\r\n    </task>\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n    <option name=\"oldMeFiltersMigrated\" value=\"true\" />\r\n  </component>\r\n  <component name=\"com.intellij.coverage.CoverageDataManagerImpl\">\r\n    <SUITE FILE_PATH=\"coverage/CS521$hw1.coverage\" NAME=\"hw2 Coverage Results\" MODIFIED=\"1632808147551\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$\" />\r\n    <SUITE FILE_PATH=\"coverage/CS521$hw2.coverage\" NAME=\"tic-tac-toe Coverage Results\" MODIFIED=\"1633304246605\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision fdb4db5450e79068b0e4a17986902a90f73c05f7)
+++ b/.idea/workspace.xml	(date 1633580922100)
@@ -1,9 +1,11 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
   <component name="ChangeListManager">
-    <list default="true" id="018372b0-5d07-4d50-84d5-5c15266a4586" name="Changes" comment="">
-      <change afterPath="$PROJECT_DIR$/lab2.py" afterDir="false" />
+    <list default="true" id="1b86ad80-4c93-46d1-8319-10964ebcb08e" name="Changes" comment="">
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_2021_9_28_0_28_[Changes]/shelved.patch" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_2021_9_28_0_28__Changes_.xml" beforeDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/tic-tac-toe.py" beforeDir="false" afterPath="$PROJECT_DIR$/tic-tac-toe.py" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -20,33 +22,19 @@
   <component name="Git.Settings">
     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
   </component>
-  <component name="GitSEFilterConfiguration">
-    <file-type-list>
-      <filtered-out-file-type name="LOCAL_BRANCH" />
-      <filtered-out-file-type name="REMOTE_BRANCH" />
-      <filtered-out-file-type name="TAG" />
-      <filtered-out-file-type name="COMMIT_BY_MESSAGE" />
-    </file-type-list>
-  </component>
-  <component name="ProjectId" id="1yHXR52q66ZlYHFZtq7P2Hn8Fc3" />
+  <component name="ProjectId" id="1yVst9hjiAFL1xkMGRC8J6tbikq" />
   <component name="ProjectViewState">
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
   <component name="PropertiesComponent">
-    <property name="ASKED_SHARE_PROJECT_CONFIGURATION_FILES" value="true" />
     <property name="RunOnceActivity.OpenProjectViewOnStart" value="true" />
     <property name="RunOnceActivity.ShowReadmeOnStart" value="true" />
     <property name="WebServerToolWindowFactoryState" value="false" />
     <property name="last_opened_file_path" value="$PROJECT_DIR$/tic-tac-toe.py" />
-  </component>
-  <component name="RecentsManager">
-    <key name="CopyFile.RECENT_KEYS">
-      <recent name="C:\Users\74545\Desktop\GitHub\CS521" />
-    </key>
   </component>
   <component name="RunManager">
-    <configuration name="tic-tac-toe" type="PythonConfigurationType" factoryName="Python" nameIsGenerated="true">
+    <configuration name="tic-tac-toe" type="PythonConfigurationType" factoryName="Python" temporary="true" nameIsGenerated="true">
       <option name="INTERPRETER_OPTIONS" value="" />
       <option name="PARENT_ENVS" value="true" />
       <envs>
@@ -68,21 +56,25 @@
       <option name="INPUT_FILE" value="" />
       <method v="2" />
     </configuration>
+    <recent_temporary>
+      <list>
+        <item itemvalue="Python.tic-tac-toe" />
+      </list>
+    </recent_temporary>
   </component>
   <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
   <component name="TaskManager">
     <task active="true" id="Default" summary="Default task">
-      <changelist id="018372b0-5d07-4d50-84d5-5c15266a4586" name="Changes" comment="" />
-      <created>1631909476435</created>
+      <changelist id="1b86ad80-4c93-46d1-8319-10964ebcb08e" name="Changes" comment="" />
+      <created>1632348309809</created>
       <option name="number" value="Default" />
       <option name="presentableId" value="Default" />
-      <updated>1631909476435</updated>
-      <workItem from="1631909479383" duration="12778000" />
-      <workItem from="1632802455971" duration="6270000" />
-      <workItem from="1632857481874" duration="803000" />
-      <workItem from="1633196170910" duration="106000" />
-      <workItem from="1633196551177" duration="1801000" />
-      <workItem from="1633216736167" duration="13344000" />
+      <updated>1632348309809</updated>
+      <workItem from="1632348313695" duration="78000" />
+      <workItem from="1632348449664" duration="2359000" />
+      <workItem from="1633477625150" duration="1130000" />
+      <workItem from="1633557852374" duration="97000" />
+      <workItem from="1633557994965" duration="9550000" />
     </task>
     <servers />
   </component>
@@ -102,7 +94,8 @@
     <option name="oldMeFiltersMigrated" value="true" />
   </component>
   <component name="com.intellij.coverage.CoverageDataManagerImpl">
-    <SUITE FILE_PATH="coverage/CS521$hw1.coverage" NAME="hw2 Coverage Results" MODIFIED="1632808147551" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
-    <SUITE FILE_PATH="coverage/CS521$hw2.coverage" NAME="tic-tac-toe Coverage Results" MODIFIED="1633304246605" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
+    <SUITE FILE_PATH="coverage/tic_tac_toe_py$tic_tac_toe.coverage" NAME="tic-tac-toe Coverage Results" MODIFIED="1633568666521" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
+    <SUITE FILE_PATH="coverage/CS521$hw1.coverage" NAME="tic-tac-toe Coverage Results" MODIFIED="1633477987058" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
+    <SUITE FILE_PATH="coverage/hw1_py$hw1.coverage" NAME="hw1 Coverage Results" MODIFIED="1632356896340" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
   </component>
 </project>
\ No newline at end of file
